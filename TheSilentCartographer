#include <MeOrion.h>

MeDCMotor motorLeft(M1);
MeDCMotor motorRight(M2);

const int baseSpeed = 100;
const int ENCODER_RIGHT_A = 9;
const int ENCODER_RIGHT_B = 3;

const int ENCODER_LEFT_A = 8;
const int ENCODER_LEFT_B = 2;

volatile long encoderTicksLeft = 0;
volatile long encoderTicksRight = 0;

String currentCommand = "";

void setup() {
  Serial.begin(115200);
  while (!Serial);

  pinMode(ENCODER_LEFT_A, INPUT_PULLUP);
  pinMode(ENCODER_LEFT_B, INPUT_PULLUP);
  pinMode(ENCODER_RIGHT_A, INPUT_PULLUP);
  pinMode(ENCODER_RIGHT_B, INPUT_PULLUP);

  attachInterrupt(digitalPinToInterrupt(ENCODER_LEFT_B), handleLeftEncoder, CHANGE);
  attachInterrupt(digitalPinToInterrupt(ENCODER_RIGHT_B), handleRightEncoder, CHANGE);

  Serial.println("USB echo ready.");
}

void handleLeftEncoder() {
  bool a = digitalRead(ENCODER_LEFT_A);
  bool b = digitalRead(ENCODER_LEFT_B);
  encoderTicksLeft += (a == b) ? 1 : -1;
}

void handleRightEncoder() {
  bool a = digitalRead(ENCODER_RIGHT_A);
  bool b = digitalRead(ENCODER_RIGHT_B);
  encoderTicksRight += (a == b) ? 1 : -1;
}

void stopMotors() {
  motorLeft.stop();
  motorRight.stop();
}

void resetEncoders() {
  encoderTicksLeft = 0;
  encoderTicksRight = 0;
  previousError = 0;
  integralError = 0;
}

void driveTicks(String direction, long ticks, int speed) {
  resetEncoders();

  int leftDir = 0;
  int rightDir = 0;

  if (direction == "Forward") {
    leftDir = 1;
    rightDir = -1;
  } else if (direction == "Backward") {
    leftDir = -1;
    rightDir = 1;
  } else if (direction == "Left") {
    leftDir = -1;
    rightDir = -1;
  } else if (direction == "Right") {
    leftDir = 1;
    rightDir = 1;
  } else {
    Serial.println("Invalid direction");
    return;
  }

  motorLeft.run(speed * leftDir);
  motorRight.run(speed * rightDir);

  while (true) {
    long leftError = ticks - abs(encoderTicksLeft);
    long rightError = ticks - abs(encoderTicksRight);

    if (leftError <= 0) motorLeft.stop();
    if (rightError <= 0) motorRight.stop();

    if (leftError <= 0 && rightError <= 0) break;
  }

  motorLeft.stop();
  motorRight.stop();
}


void loop() {
  if (Serial.available()) {
    String input = Serial.readStringUntil('\n');
    while (Serial.available()) Serial.read();
    input.trim(); // Trim pubes
    Serial.println(input); // Echoes back current input to user

    resetEncoders(); 

    if (input == "Stop") {
      stopMotors();
      currentCommand = "";
    } else {
      currentCommand = input;
    }
  }

  if (currentCommand == "Forward") {
    driveTicks("Forward", 500, baseSpeed);  // move forward 500 ticks
    currentCommand = "";
  }

  else if (currentCommand == "Backward") {
    motorLeft.run(-baseSpeed);
    motorRight.run(baseSpeed);
  }

  else if (currentCommand == "Left") {
    motorLeft.run(-baseSpeed);
    motorRight.run(-baseSpeed);
  }

  else if (currentCommand == "Right") {
    motorLeft.run(baseSpeed);
    motorRight.run(baseSpeed);
  }
}
